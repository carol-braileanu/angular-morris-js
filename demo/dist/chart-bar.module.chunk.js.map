{"version":3,"sources":["/Users/mika/Développement/Angular/angular-morris-js/demo/src/app/chart-bar/chart-bar-routing.module.ts","/Users/mika/Développement/Angular/angular-morris-js/demo/src/app/chart-bar/chart-bar.component.css","/Users/mika/Développement/Angular/angular-morris-js/demo/src/app/chart-bar/chart-bar.component.html","/Users/mika/Développement/Angular/angular-morris-js/demo/src/app/chart-bar/chart-bar.component.ts","/Users/mika/Développement/Angular/angular-morris-js/demo/src/app/chart-bar/chart-bar.module.ts","/Users/mika/Développement/Angular/angular-morris-js/demo/src/app/chart-bar/morris-js-bar.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAyC;AACc;AAEG;AAE1D,IAAM,MAAM,GAAW,CAAC;QACtB,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+EAAiB;KAC7B,CAAC,CAAC;AAMH,IAAa,qBAAqB;IAAlC;IAAqC,CAAC;IAAD,4BAAC;AAAD,CAAC;AAAzB,qBAAqB;IAJjC,+DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,6DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,6DAAY,CAAC;KACxB,CAAC;GACW,qBAAqB,CAAI;AAAJ;;;;;;;;ACdlC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,0MAA0M,aAAa,8IAA8I,uFAAuF,IAAI,QAAQ,qbAAqb,gCAAgC,WAAW,gCAAgC,WAAW,gCAAgC,WAAW,gCAAgC,WAAW,gCAAgC,WAAW,gCAAgC,WAAW,gCAAgC,IAAI,4uEAA4uE,6CAA6C,QAAQ,q5C;;;;;;;;;;;;;;;;;ACAn4G;AAED;AAShE,IAAa,iBAAiB;IAA9B;IAkBA,CAAC;IAdC;;OAEG;IACH,oCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,GAAG,oEAAY,CAAC;QACjC,IAAI,CAAC,eAAe,GAAG,uEAAe,CAAC;IACzC,CAAC;IAED;;OAEG;IACH,2CAAe,GAAf;QACE,KAAK,CAAC,YAAY,EAAE,CAAC;IACvB,CAAC;IACH,wBAAC;AAAD,CAAC;AAlBY,iBAAiB;IAL7B,gEAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,+FAAyC;QACzC,8FAAwC;KACzC,CAAC;GACW,iBAAiB,CAkB7B;AAlB6B;;;;;;;;;;;;;;;;;;;;;;;ACXW;AACM;AAEH;AAEU;AAEa;AACT;AAW1D,IAAa,cAAc;IAA3B;IAA8B,CAAC;IAAD,qBAAC;AAAD,CAAC;AAAlB,cAAc;IAT1B,+DAAQ,CAAC;QACR,OAAO,EAAE;YACP,6DAAY;YACZ,wFAAqB;YACrB,gEAAS;YACT,kEAAc;SACf;QACD,YAAY,EAAE,CAAC,+EAAiB,CAAC;KAClC,CAAC;GACW,cAAc,CAAI;AAAJ;;;;;;;;;;;ACnBpB,IAAI,eAAe,GAAG;IAC3B,IAAI,EAAE,GAAG;IACT,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;IACjB,MAAM,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;IAChC,MAAM,EAAE,IAAI;CACb,CAAC;AAEK,IAAI,YAAY,GAAI;IACzB,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE;IAC5B,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE;IAC5B,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE;IAC5B,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE;IAC5B,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE;IAC5B,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,EAAG,CAAC,EAAE,EAAE,EAAE;IAC5B,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE;CAC7B,CAAC","file":"chart-bar.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ChartBarComponent } from './chart-bar.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: ChartBarComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ChartBarRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/mika/Développement/Angular/angular-morris-js/demo/src/app/chart-bar/chart-bar-routing.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mika/Développement/Angular/angular-morris-js/demo/src/app/chart-bar/chart-bar.component.css\n// module id = ../../../../../demo/src/app/chart-bar/chart-bar.component.css\n// module chunks = chart-bar.module","module.exports = \"<lte-box lteTitle=\\\"Demo\\\" [collapsable]=\\\"false\\\" [removable]=\\\"false\\\">\\n  <div mk-morris-js [options]=\\\"chartBarOptions\\\" [data]=\\\"chartBarData\\\" type=\\\"Bar\\\" style=\\\"height: 500px; width: 100%;\\\"></div>\\n</lte-box>\\n\\n<lte-box lteTitle=\\\"Usage\\\" [collapsable]=\\\"false\\\" [removable]=\\\"false\\\">\\n  <pre><code class=\\\"language-html\\\">&lt;div mk-morris-js [options]=\\\"chartBarOptions\\\" [data]=\\\"chartBarData\\\" type=\\\"Bar\\\"&gt;&lt;/div&gt;</code></pre>\\n</lte-box>\\n\\n<lte-box lteTitle=\\\"Datas\\\" [collapsable]=\\\"true\\\" [removable]=\\\"false\\\">\\n  <p>\\n    This is an array of objects, containing x and y attributes as described by the <code>xkey</code> and <code>ykeys</code> options.\\n    <br>\\n    <em>Note: the order in which you provide the data is the order in which the bars are displayed.</em>\\n  </p>\\n  <pre><code class=\\\"language-html\\\">let chartAreaData = [\\n  &#123; y: '2006', a: 100, b: 90 &#125;,\\n  &#123; y: '2007', a: 75,  b: 65 &#125;,\\n  &#123; y: '2008', a: 50,  b: 40 &#125;,\\n  &#123; y: '2009', a: 75,  b: 65 &#125;,\\n  &#123; y: '2010', a: 50,  b: 40 &#125;,\\n  &#123; y: '2011', a: 75,  b: 65 &#125;,\\n  &#123; y: '2012', a: 100, b: 90 &#125;\\n];</code></pre>\\n</lte-box>\\n\\n<lte-box lteTitle=\\\"Options\\\" [collapsable]=\\\"true\\\" [removable]=\\\"false\\\">\\n  <table class=\\\"table table-striped table-bordered\\\">\\n    <tbody>\\n      <tr>\\n        <td><code>xkey</code><br><b>required</b></td>\\n        <td>\\n          A string containing the name of the attribute that contains\\n          X labels.\\n        </td>\\n      </tr>\\n      <tr>\\n        <td><code>ykeys</code><br><b>required</b></td>\\n        <td>\\n          A list of strings containing names of attributes that\\n          contain Y values (one for each series of data to be\\n          plotted).\\n        </td>\\n      </tr>\\n      <tr>\\n        <td><code>labels</code><br><b>required</b></td>\\n        <td>\\n          A list of strings containing labels for the data series\\n          to be plotted (corresponding to the values in the\\n          <code>ykeys</code> option).\\n        </td>\\n      </tr>\\n      <tr>\\n        <td><code>barColors</code></td>\\n        <td>\\n          Array containing colors for the series bars.\\n        </td>\\n      </tr>\\n      <tr>\\n        <td><code>stacked</code></td>\\n        <td>\\n          Set to <code>true</code> to draw bars stacked vertically.\\n        </td>\\n      </tr>\\n      <tr>\\n        <td><code>hideHover</code></td>\\n        <td>\\n          Set to <code>false</code> to always show a hover legend.\\n          <br>\\n          Set to <code>true</code> or <code>'auto'</code> to only show the\\n          hover legend when the mouse cursor is over the chart.\\n          <br>\\n          Set to <code>'always'</code> to never show a hover legend.\\n        </td>\\n      </tr>\\n      <tr>\\n        <td><code>hoverCallback</code></td>\\n        <td>\\n          Provide a function on this option to generate custom\\n          hover legends.\\n          <br>\\n          The function will be called with the index of the row under\\n          the hover legend, the options object passed to the constructor\\n          as arguments, a string containing the default generated hover legend\\n          content HTML, and an object containing the original data for the\\n          row as passed in the <code>data</code> option.\\n          <br>\\n          <em>eg:</em>\\n          <pre>hoverCallback: function (index, options, content, row) &#123;\\nreturn \\\"sin(\\\" + row.x + \\\") = \\\" + row.y;\\n&#125;</pre>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td><code>axes</code></td>\\n        <td>\\n          Set to <code>false</code> to disable drawing the x and\\n          y axes.\\n        </td>\\n      </tr>\\n      <tr>\\n        <td><code>grid</code></td>\\n        <td>\\n          Set to <code>false</code> to disable drawing the horizontal\\n          grid lines.\\n        </td>\\n      </tr>\\n      <tr>\\n        <td><code>gridTextColor</code></td>\\n        <td>\\n          Set the color of the axis labels (default: #888).\\n        </td>\\n      </tr>\\n      <tr>\\n        <td><code>gridTextSize</code></td>\\n        <td>\\n          Set the point size of the axis labels (default: 12).\\n        </td>\\n      </tr>\\n      <tr>\\n        <td><code>gridTextFamily</code></td>\\n        <td>\\n          Set the font family of the axis labels (default: sans-serif).\\n        </td>\\n      </tr>\\n      <tr>\\n        <td><code>gridTextWeight</code></td>\\n        <td>\\n          Set the font weight of the axis labels (default: normal).\\n        </td>\\n      </tr>\\n      <tr>\\n        <td><code>resize</code></td>\\n        <td>\\n          Set to <code>true</code> to enable automatic resizing when the\\n          containing element resizes. (default: false).\\n          <br>\\n          This has a significant performance impact, so is disabled by\\n          default.\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</lte-box>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mika/Développement/Angular/angular-morris-js/demo/src/app/chart-bar/chart-bar.component.html\n// module id = ../../../../../demo/src/app/chart-bar/chart-bar.component.html\n// module chunks = chart-bar.module","import { Component, OnInit, AfterViewInit } from '@angular/core';\n\nimport { chartBarData, chartBarOptions } from './morris-js-bar';\n\ndeclare var Prism;\n\n@Component({\n  selector: 'app-chart-bar',\n  templateUrl: './chart-bar.component.html',\n  styleUrls: ['./chart-bar.component.css']\n})\nexport class ChartBarComponent implements OnInit, AfterViewInit {\n  public chartBarData;\n  public chartBarOptions;\n\n  /**\n   * @method ngOnInit\n   */\n  ngOnInit() {\n    this.chartBarData = chartBarData;\n    this.chartBarOptions = chartBarOptions;\n  }\n\n  /**\n   * @method ngAfterViewInit\n   */\n  ngAfterViewInit() {\n    Prism.highlightAll();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mika/Développement/Angular/angular-morris-js/demo/src/app/chart-bar/chart-bar.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BoxModule } from '../ng-admin-lte';\n\nimport { MorrisJsModule } from '../angular-morris-js';\n\nimport { ChartBarRoutingModule } from './chart-bar-routing.module';\nimport { ChartBarComponent } from './chart-bar.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ChartBarRoutingModule,\n    BoxModule,\n    MorrisJsModule\n  ],\n  declarations: [ChartBarComponent]\n})\nexport class ChartBarModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/mika/Développement/Angular/angular-morris-js/demo/src/app/chart-bar/chart-bar.module.ts","export var chartBarOptions = {\n  xkey: 'y',\n  ykeys: ['a', 'b'],\n  labels: ['Series A', 'Series B'],\n  resize: true\n};\n\nexport var chartBarData =  [\n  { y: '2006', a: 100, b: 90 },\n  { y: '2007', a: 75,  b: 65 },\n  { y: '2008', a: 50,  b: 40 },\n  { y: '2009', a: 75,  b: 65 },\n  { y: '2010', a: 50,  b: 40 },\n  { y: '2011', a: 75,  b: 65 },\n  { y: '2012', a: 100, b: 90 }\n];\n\n\n\n// WEBPACK FOOTER //\n// /Users/mika/Développement/Angular/angular-morris-js/demo/src/app/chart-bar/morris-js-bar.ts"],"sourceRoot":"webpack:///"}